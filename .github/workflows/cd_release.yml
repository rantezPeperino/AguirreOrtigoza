name: CD Release + Deploy to Render

on:
  create:
    tags:
      - 'v*.*.*'  # Dispara cuando se crea un tag tipo v1.0.0

permissions:
  contents: write   # Da permiso al GITHUB_TOKEN para crear releases

jobs:
  release-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Descargar el c√≥digo del repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Crear Release en GitHub (actualizado)
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            Nueva versi√≥n liberada: ${{ github.ref }}
            Este release fue generado autom√°ticamente por el pipeline de CD.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 3Ô∏è‚É£ Desplegar en Render
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "üöÄ Desplegando en Render..."
          SERVICE_ID=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" https://api.render.com/v1/services | jq -r '.[0].id')
          curl -X POST -H "Authorization: Bearer $RENDER_API_KEY" \
               -H "Content-Type: application/json" \
               -d "{\"clearCache\":false}" \
               https://api.render.com/v1/services/$SERVICE_ID/deploys
          echo "‚úÖ Deploy iniciado en Render"
